import re
import requests
import random
from urllib.parse import unquote
from telethon import TelegramClient
from dotenv import load_dotenv
import os
from PIL import Image

load_dotenv()

api_id = int(os.getenv("TELEGRAM_API_ID"))
api_hash = os.getenv("TELEGRAM_API_HASH")
to = os.getenv("TELEGRAM_TO")

client = TelegramClient("session_name", api_id, api_hash)

async def main():
    message = "–° –¥–æ–±—Ä—ã–º —É—Ç—Ä–æ–º üåû"

    try:
        # –ø—Ä–æ–±—É–µ–º —Å–∫–∞—á–∞—Ç—å —Å–ª—É—á–∞–π–Ω—É—é –∫–∞—Ä—Ç–∏–Ω–∫—É
        q = "–æ—Ç–∫—Ä—ã—Ç–∫–∏ —Å –¥–æ–±—Ä—ã–º —É—Ç—Ä–æ–º –∏ —Ö–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è"
        url = "https://yandex.kz/images/search"
        params = {"text": q}
        headers = {
            "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36"
        }

        resp = requests.get(url, params=params, headers=headers, timeout=15)
        html = resp.text
        matches = re.findall(r'img_url=([^&"\']+)', html)

        if not matches:
            raise Exception("–ö–∞—Ä—Ç–∏–Ω–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")

        img_url = unquote(random.choice(matches))
        print("–í—ã–±—Ä–∞–Ω —Å–ª—É—á–∞–π–Ω—ã–π URL:", img_url)

        r = requests.get(img_url, headers=headers, stream=True, timeout=20)
        file_path = "random_image.jpg"
        with open(file_path, "wb") as f:
            for chunk in r.iter_content(1024):
                f.write(chunk)
        print("–°–æ—Ö—Ä–∞–Ω–µ–Ω–æ –∫–∞–∫", file_path)

        # –ø–µ—Ä–µ—Å–æ—Ö—Ä–∞–Ω—è–µ–º —á–µ—Ä–µ–∑ Pillow –¥–ª—è –≥–∞—Ä–∞–Ω—Ç–∏–∏
        img = Image.open(file_path).convert("RGB")
        img.save(file_path, "JPEG")
        print("–ü–µ—Ä–µ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π JPEG")

        await client.send_file(to, file=file_path, caption=message)
        print("‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ")
    except Exception as e:
        print("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–∞—Ä—Ç–∏–Ω–∫–∏:", e)
        await client.send_message(to, message + " (–±–µ–∑ –∫–∞—Ä—Ç–∏–Ω–∫–∏)")
        print("‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Ç–æ–ª—å–∫–æ —Å–æ–æ–±—â–µ–Ω–∏–µ")


with client:
    client.loop.run_until_complete(main())
